{
  "name": "Jscript300-Spring2016.GitHub.io",
  "tagline": "Welcome to JSCRIPT 300, Modern Web Applications!",
  "body": "##JSCRIPT300B Modern Web Applications\r\n\r\nInstructor: [James Donaldson](mailto:jamdon@uw.edu)(jamdon@uw.edu)\r\n\r\nCourse [Wiki](https://github.com/JSCRIPT300-Spring2016/JSCRIPT300-Spring2016.github.io/wiki)\r\n\r\n###Course Overview\r\nThis project-based course will train students to build a modern, full-stack, web application using JavaScript. Employing skills gained from the first two courses, the student will learn all the facets of constructing a web application, from employing good developer habits and best practices, to building a server supplying a RESTful web service, using build tools and testing code, and finally implementing a single-page application using model/view patterns. Topics include:\r\n\r\n* coding best practices\r\n* developer work-flow\r\n* design patterns\r\n* templating\r\n* Node.js\r\n* Express.js\r\n* Underscore/Lo-dash\r\n* Backbone.js\r\n* Grunt.js\r\n* Mocha, Chai, and Sinon.js\r\n\r\nAt the conclusion of this course, the student will know how to:\r\n\r\n* Write JavaScript code employing best practices and coding standards, including the use of a style guide and code linting.\r\n* Understand and use the module pattern to write well-formed, self-contained units of JavaScript code.\r\n* Use JavaScript to build a server that can serve up pages as well as a RESTful API using Node.js and Express.js.\r\n* Write JavaScript unit tests using Mocha, Chai, and Sinon.\r\n* Understand the MV* design pattern as it applies to client-side application development and how to architect a single-page application using Backbone.js.\r\n* Use tools to facilitate the automation of common tasks such as code linting, test execution, file concatenation and minification. \r\n* Measure the performance of their code and applications and employ strategies to improve it.\r\n\r\n###Online Meeting Room:\r\n\r\nThose who attend online will use Adobe Connect Meeting. Here is the class [Adobe Connect Meeting Room](http://uweoconnect.extn.washington.edu/jscript300/) (Links to an external site.). Before each online session, test your headset by running the Audio Setup Wizard in our [test meeting room](http://uweoconnect.extn.washington.edu/publictest?launcher=false) (Links to an external site.). If you do not have a headset, you can use your computer speakers to hear what is going on and use the Meeting Room's chat to participate.\r\n\r\n###Course Materials:\r\n\r\nThere is no required text for this course, but mention will be made and references provided for additional relevant texts, online resources, and related materials. These, while not required, provide further background or alternative ways of presenting the same material and topics covered by lecture.\r\n\r\n###Technical Requirements:\r\n\r\nA laptop is required for students who attend in the classroom.  If a student attends online, they need to access the class via an Internet connected computer with a fast enough Internet connection to utilize the SyncDL software.  The student will also need to have a Github account.\r\n\r\n###Student Assessment:\r\n\r\nStudents will complete several homework assignments, most of which will be used as building blocks for a project to be completed by the end of the course. Individual homework assignments will account for 60% of the studentâ€™s total grade. The completed project will account for the remaining 40%. The student must attend at least 80% of the course sessions (8 of 10.) Homework assigned in a given week is due the following week on Thursday by 7pm.\r\n\r\n###Meeting Recordings: \r\n\r\nMeeting recordings will be posted on the [wiki](https://github.com/JSCRIPT300-Spring2016/JSCRIPT300-Spring2016.github.io/wiki/Recordings) within 24 hours of the meeting.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}